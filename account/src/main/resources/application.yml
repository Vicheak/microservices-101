server:
  port: 8080

spring:
  application:
    name: account
    
  profiles:
    active: prod
    
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
       
  h2:
    console:
      enabled: true
      
  config:
    import: optional:configserver:http://localhost:8071/
    
#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest
   
management:
  endpoints:
    web:
      exposure:
        include: "*"
  info:
    env:
      enabled: true  
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
      
info:
  app: 
    name: Account Microservice
    description: Vicheak Bank Account App
    version: 1.0.0
      
eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url: 
      defaultZone: http://localhost:9000/eureka/ 
      
resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
    instances:
      customerDetailSupport:
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30000
        permitted-number-of-calls-in-half-open-state: 2
  
  retry:
    instances:
      retryCustomerDetail:
        max-attempts: 3
        wait-duration: 2000
        
  ratelimiter:
    configs:
       default:
        register-health-indicator: true
    instances:
      sayHelloLimiter:
        timeout-duration: 5000
        limit-refresh-period: 5000
        limit-for-period: 1
  
logging:
  level:
    '[com.vicheak.bank.account]': DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"